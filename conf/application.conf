# Copyright 2025 HM Revenue & Customs
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

include "backend.conf"

# This is the main configuration file for the application.
# ~~~~~

appName = individuals-dividends-income-api

appUrl = "http://localhost:7763"

# Play Modules
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.HttpClientV2Module"
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.AuthModule"
play.modules.enabled += "config.DividendsIncomePlayModule"

# Json error handler
play.http.errorHandler = "shared.utils.ErrorHandler"

# Allow api-documentation-frontend for local documentation preview
play.filters.enabled += "play.filters.cors.CORSFilter"
play.filters.cors {
  allowedOrigins = ["http://localhost:9680"]
}

# Api related config
api {
  # The status of the version of the API for the API Platform.
  1.0 {
    status = "DEPRECATED"
    deprecatedOn = "2025-06-19"
    endpoints {
      enabled = true
      api-released-in-production = true
      allow-request-cannot-be-fulfilled-header = true
    }
  }
  
  2.0 {
    status = "BETA"
    endpoints {
      enabled = true
      api-released-in-production = true
      allow-request-cannot-be-fulfilled-header = true
      released-in-production {
        additional-directorship-dividend-retrieve = false
        additional-directorship-dividend-create-amend = false
        additional-directorship-dividend-delete = false
     }
   }
 }

  confidence-level-check {
    confidence-level = 250
    definition.enabled = true
    auth-validation.enabled = true
  }

  supporting-agent-endpoints {
    retrieve-dividends = false
    create-amend-uk-dividends-annual-summary = false
    delete-dividends = false
    create-amend-dividends = false
    retrieve-uk-dividends-annual-income-summary = false
    delete-uk-dividends-income-annual-summary = false
    delete-additional-directorship-and-dividend-information = false
    retrieve-additional-directorship-and-dividend-information = false
    create-or-amend-additional-directorship-and-dividend-information = false
  }

  # The context which the API will have via the API Platform http://API_GATEWAY/{api.gateway.context}/
  gateway.context = "individuals/dividends-income"
}

bootstrap.http.headersAllowlist = [ "Accept", "Gov-Test-Scenario", "Content-Type", "Location", "X-Request-Timestamp", "X-Session-Id" ]

internalServiceHostPatterns = [ "localhost" ]


# Metrics plugin settings - graphite reporting is configured on a per env basis
metrics {
  enabled = true
}

auditing {
  enabled = true
}

# The application languages
# ~~~~~
play.i18n.langs = ["en"]

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# !!!WARNING!!! DO NOT CHANGE THIS ROUTER
play.http.router = prod.Routes

play.http.requestHandler = "shared.routing.VersionRoutingRequestHandler"

# Microservice specific config

feature-switch {
  passDeleteIntentHeader.enabled = true
  desIf_Migration.enabled = false
  additional-directorship-dividend.enabled = true

  supporting-agents-access-control {
     enabled = true
     released-in-production = false
  }
}

microservice {
  services {
    auth {
      host = localhost
      port = 8500
    }

    mtd-id-lookup {
      host = localhost
      port = 9769
    }

    des {
      host = 127.0.0.1
      port = 9772
      env = Prod
      token = ABCD1234
      environmentHeaders = ["Accept", "Gov-Test-Scenario", "Content-Type", "Location", "X-Request-Timestamp", "X-Session-Id", "X-Request-Id"]
    }

    ifs {
      host = 127.0.0.1
      port = 9772
      env = Prod
      token = ABCD1234
      environmentHeaders = ["Accept", "Gov-Test-Scenario", "Content-Type", "Location", "X-Request-Timestamp", "X-Session-Id", "X-Request-Id"]
    }

    hip {
      host = 127.0.0.1
      port = 9772
      env = Prod
      clientId = "someClientId"
      clientSecret = "someClientSecret"
      environmentHeaders = ["Accept", "Gov-Test-Scenario", "Location", "X-Request-Timestamp", "X-Session-Id", "X-Request-Id"]
    }
  }
}
